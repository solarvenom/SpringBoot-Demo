package demo.ecommerce.product.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.Table;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.PrePersist;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;

import java.time.Instant;
import java.util.UUID;

import org.hibernate.annotations.CreationTimestamp;
import org.springframework.data.annotation.CreatedDate;

import demo.ecommerce.api.helpers.Helpers;
import demo.ecommerce.product.enums.ColourEnum;
import demo.ecommerce.product.enums.SizeEnum;

@Entity
@Table(name="product_variants")
public class ProductVariantEntity {

    @ManyToOne
    @JoinColumn(name="product_id")
    private ProductEntity product;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    @Column(updatable = false, nullable = false, unique = true, columnDefinition = "UUID")
    private UUID uuid;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private ColourEnum colour;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private SizeEnum size;

    @Column(nullable = false)
    private Double price;

    @Column(nullable = false)
    private Integer stock;

    @Column(unique = true, nullable = false)
    private String sku;

    @Column(unique = true, nullable = false)
    private String ean;

    @CreationTimestamp
    @CreatedDate
    @Column(updatable = false, nullable = false)
    private Instant createdDate;

    @Column(updatable = true, nullable = true)
    private Instant deletedDate;

    @PrePersist
    public void populateAutogeneratedFields() {
        if (uuid == null) {
            uuid = UUID.randomUUID();
        }
        if (sku == null) {
            sku = Helpers.generateSku(product, size, colour);
        }
        if (ean == null){
            ean = Helpers.generateEan();
        }
    }

    protected ProductVariantEntity(){}

    public ProductVariantEntity(
        ColourEnum colour,
        SizeEnum size,
        Double price,
        Integer stock
    ) {
        this.colour = colour;
        this.size = size;
        this.price = price;
        this.stock = stock;
    }

    public UUID getUuid(){
        return uuid;
    }

    public ColourEnum getColour() {
        return colour;
    }

    public SizeEnum getSize() {
        return size;
    }

    public Double getPrice(){
        return price;
    }

    public void setPrice(Double price){
        this.price = price;
    }

    public Integer getStock(){
        return stock;
    }

    public void setStock(Integer stock){
        this.stock = stock;
    }

    public String getSku(){
        return sku;
    }

    public String getEan(){
        return ean;
    }

    public ProductEntity getProduct(){
        return product;
    }

    public void setProduct(ProductEntity product){
        this.product = product;
    }

    public Instant getCreatedDate(){
        return createdDate;
    }

    public Instant getDeletedDate(){
        return deletedDate;
    }

    public void setDeletedDate(Instant deletedDate){
        this.deletedDate = deletedDate;
    }
}
